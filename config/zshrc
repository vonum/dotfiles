export ZSH=$HOME/.oh-my-zsh
export EDITOR="nvim"
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

HISTSIZE=5000               # How many lines of history to keep in memory
HISTFILE=~/.zsh_history     # Where to save history to disk
SAVEHIST=5000               # Number of history entries to save to disk
HISTDUP=erase               # Erase duplicates in the history file
ZSH_THEME="spaceship"

setopt appendhistory     # Append history to the history file (no overwriting)
setopt sharehistory      # Share history across terminals
setopt incappendhistory  # Immediately append to the history file, not just when a term is killed
setopt autocd            # Change directories without cd
setopt rmstarsilent

if [ -d /opt/homebrew/bin ]; then
  export PATH=$PATH:/opt/homebrew/bin
fi

if [ -d $HOME/bin ]; then
  export PATH=$PATH:$HOME/bin
fi

if [ -x /opt/homebrew/bin/rbenv ]; then
  eval "$(rbenv init - zsh)"
fi

export GOPATH=$HOME/go
export PATH=$PATH:/$HOME/go/bin

export PATH=$PATH:$HOME/.local/bin

if [ -d $HOME/.nvm ]; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

if [ -d "/opt/homebrew/opt/openvpn/sbin/openvpn:$PATH" ]; then
export PATH="/opt/homebrew/opt/openvpn/sbin/openvpn:$PATH"
fi

if [ -d $HOME/.cargo/bin ]; then
  export PATH="$PATH:$HOME/.cargo/bin"
fi

if [ -d $HOME/.foudnry/bin ]; then
  export PATH="$PATH:$HOME/.foundry/bin"
fi

if [ -d $HOME/.pyenv ]; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init --path)"
fi

# Spaceship + autocompletion setup
bindkey '^ ' autosuggest-accept # CTRL + SPACE
# bindkey '^M' autosuggest-execute # CTRL + ENTER
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=243'

source ~/.aliases
source $ZSH/oh-my-zsh.sh
source <(kubectl completion zsh)

plugins=(
  zsh-autosuggestions
  docker
  docker-compose
)

SPACESHIP_PROMPT_ORDER=(
  time
  user
  host
  dir
  git
  docker
  kubectl
  golang
  ruby
  elixir
  julia
  jobs
  line_sep
  char
)

export SPACESHIP_JOBS_COLOR="yellow"
export LESS="FRX"

source ~/.aliases
source $ZSH/oh-my-zsh.sh
source <(kubectl completion zsh)

# ssh
eval `ssh-agent`
ssh-add ~/.ssh/id_rsa

open_tunnel_dev() {
    echo "Opening tunnel"
    ssh -f -N ec2-tunnel-dev
}

close_tunnel_dev() {
  local pid
  pid=$(lsof -Pi :5433 -sTCP:LISTEN -t)
  if [ -n "$pid" ]; then
    echo "Closing tunnel with PID $pid"
    kill "$pid"
  else
    echo "No tunnel is running on port 5433"
  fi
}
