export ZSH=$HOME/.oh-my-zsh
export EDITOR="vim"
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

HISTSIZE=5000               # How many lines of history to keep in memory
HISTFILE=~/.zsh_history     # Where to save history to disk
SAVEHIST=5000               # Number of history entries to save to disk
HISTDUP=erase               # Erase duplicates in the history file
ZSH_THEME="spaceship"

setopt appendhistory     # Append history to the history file (no overwriting)
setopt sharehistory      # Share history across terminals
setopt incappendhistory  # Immediately append to the history file, not just when a term is killed
setopt autocd            # Change directories without cd
setopt rmstarsilent

bindkey '^ ' autosuggest-accept # CTRL + SPACE
bindkey '^^M' autosuggest-execute # CTRL + ENTER
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=243'

# if [ "$TMUX" = "" ]; then tmux; fi

if [ -d /opt/homebrew/bin ]; then
  export PATH=$PATH:/opt/homebrew/bin
fi

if [ -d $HOME/bin ]; then
  export PATH=$PATH:$HOME/bin
fi

if [ -d $HOME/.gem.ruby/2.3.0 ]; then
  export PATH=$PATH:$HOME/.gem/ruby/2.3.0/bin
fi

if [ -d $HOME/anaconda3/bin ]; then
  export PATH=$PATH:$HOME/anaconda3/bin
fi

if [ -d /usr/local/go/bin ]; then
  export PATH=$PATH:/usr/local/go/bin
fi

export PATH=$PATH:$HOME/.local/bin

# virtualenvwrapper
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export WORKON_HOME=$HOME/Envs
export VIRTUALENVWRAPPER_VIRTUALENV=$HOME/Library/Python/3.8/bin/virtualenv
source $HOME/Library/Python/3.8/bin/virtualenvwrapper.sh

eval `ssh-agent`
ssh-add ~/.ssh/id_rsa

plugins=(
  zsh-autosuggestions
  docker
  docker-compose
)

SPACESHIP_PROMPT_ORDER=(
  time
  user
  host
  dir
  git
  docker
  kubectl
  ruby
  elixir
  julia
  venv
  pyenv
  jobs
  line_sep
  char
)

export SPACESHIP_JOBS_COLOR="yellow"
export LESS="FRX"

source ~/.aliases
source $ZSH/oh-my-zsh.sh
source <(kubectl completion zsh)

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/vonum/google-cloud-sdk/path.zsh.inc' ]; then . '/home/vonum/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/vonum/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/vonum/google-cloud-sdk/completion.zsh.inc'; fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/vonum/miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/vonum/miniforge3/etc/profile.d/conda.sh" ]; then
        . "/Users/vonum/miniforge3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/vonum/miniforge3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="/opt/homebrew/opt/openvpn/sbin/openvpn:$PATH"
eval "$(rbenv init - zsh)"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

export PATH="$PATH:/Users/vonum/.foundry/bin"
